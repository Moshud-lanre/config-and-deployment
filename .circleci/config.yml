# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  
  create_infrastructure:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1
      - destroy_environment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["bf:26:a1:21:13:97:1f:a9:9e:fc:ec:ec:5b:11:2a:48"]
      - run:
          name: Install ansible
          command: |
              apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml
  # smoke_test:
  #   docker: 
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run: 
  #         name: smoke smoke_test
  #         command: |
  #           URL="https://blog.udacity.com/"

  #           #Testing if website exists
  #           if curl -s --head ${URL}
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run:
  #         name: Test jobs
  #         #Failing the job intentionally to simulate an error
  #         command: return 1
  #     - destroy_environment
      



# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  infra-workflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      # - smoke_test:
      #     requires: 
      #       - create_infrastructure
      